#include <iostream>
#include <iomanip> // for setw
using namespace std;

int main() {
    int n, cap;
    cout << "Enter NO. of Items : ";
    cin >> n;

    int value[50], weight[50];
    char itemName[50][3]; // For P1, P2, ...
    
    // Input values and assign item names
    for(int i = 0; i < n; i++) {
        cout << "Enter the Profit of P" << i+1 << " : ";
        cin >> value[i];
        itemName[i][0] = 'P';
        itemName[i][1] = '0' + i + 1;
        itemName[i][2] = '\0';
    }

    // Input weights
    for(int i = 0; i < n; i++) {
        cout << "Enter the Weight of P" << i+1 << " : ";
        cin >> weight[i];
    }

    cout << "Enter the Max capacity : ";
    cin >> cap;

    // DP table initialization
    int dp[50][100] = {0};

    // Build DP table
    for(int i = 0; i < n; i++) {
        for(int w = 0; w <= cap; w++) {
            if(weight[i] <= w) {
                dp[i][w] = max((i > 0 ? dp[i-1][w] : 0),
                               value[i] + (i > 0 ? dp[i-1][w - weight[i]] : 0));
            } else {
                dp[i][w] = (i > 0 ? dp[i-1][w] : 0);
            }
        }
    }

    // Print DP table
    cout << "\nDP Table:\n";
    for(int i = 0; i < n; i++) {
        for(int w = 0; w <= cap; w++) {
            cout << setw(3) << dp[i][w] << " ";
        }
        cout << endl;
    }

    // Maximum profit
    int maxProfit = dp[n-1][cap];
    cout << "\nMax profit : " << maxProfit << endl;

    // Find selected items
    cout << "Selected Items are : ";
    int w = cap;
    for(int i = n-1; i >= 0; i--) {
        if(i == 0 && dp[i][w] > 0) {
            cout << itemName[i];
        } else if(i > 0 && dp[i][w] != dp[i-1][w]) {
            cout << itemName[i];
            w -= weight[i];
        }
    }
    cout << endl;

    return 0;
}
/*Enter NO. of Items : 4
Enter the Profit of P1 : 10
Enter the Profit of P2 : 20
Enter the Profit of P3 : 8
Enter the Profit of P4 : 6
Enter the Weight of P1 : 10
Enter the Weight of P2 : 12
Enter the Weight of P3 : 8
Enter the Weight of P4 : 5
Enter the Max capacity : 20

DP Table:
  0   0   0   0   0   0   0   0   0   0  10  10  10  10  10  10  10  10  10  10  10 
  0   0   0   0   0   0   0   0   0   0  10  10  20  20  20  20  20  20  20  20  20 
  0   0   0   0   0   0   0   0   8   8  10  10  20  20  20  20  20  20  20  20  28 
  0   0   0   0   0   6   6   6   8   8  10  10  20  20  20  20  20  26  26  26  28 

Max profit : 28
Selected Items are : P3P2*/
